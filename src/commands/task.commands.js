import { message } from 'telegraf/filters'
import {
	cancelKeyboard,
	categories,
	changeCategoryKeyboard,
	mainMenuKeyboard,
	taskCategoryKeyboard,
} from '../bot/keyboards.js'
import { taskService } from '../services/taskService.js'

export function registerTaskCommands(bot) {
	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—á–∏"
	bot.hears('üìã –ó–∞–¥–∞—á–∏', async ctx => {
		try {
			const tasks = await taskService.getTasks(ctx.from.id)
			const taskList = tasks.length
				? tasks
						.map((t, i) => {
							// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
							const displayCategory = t.category || '–æ–±—â–µ–µ'
							return `${i + 1}. ${
								t.description
							} [${displayCategory}]`
						})
						.join('\n')
				: '–ó–∞–¥–∞—á –Ω–µ—Ç.'
			await ctx.reply(`üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n${taskList}`)
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á:', error)
			await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á.')
		}
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
	bot.hears('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', async ctx => {
		ctx.session.addingTask = true
		ctx.session.newTask = {}
		await ctx.reply(
			'–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:\n(–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)',
			cancelKeyboard
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"
	bot.hears('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É', async ctx => {
		ctx.session.deletingTask = true
		const tasks = await taskService.getTasks(ctx.from.id)

		if (tasks.length === 0) {
			await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.')
			ctx.session.deletingTask = false
			return
		}

		const taskList = tasks
			.map((t, i) => `${i + 1}. ${t.description}`)
			.join('\n')
		await ctx.reply(
			`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n${taskList}\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`,
			cancelKeyboard
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫"
	bot.hears('üìÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫', async ctx => {
		ctx.session.settingDueDate = true
		ctx.session.dueDate = {}

		const tasks = await taskService.getTasks(ctx.from.id)

		if (tasks.length === 0) {
			await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.')
			ctx.session.settingDueDate = false
			return
		}

		const taskList = tasks
			.map((t, i) => `${i + 1}. ${t.description}`)
			.join('\n')
		await ctx.reply(
			`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ä–æ–∫–∞:\n${taskList}\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`,
			cancelKeyboard
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"
	bot.hears('üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏', async ctx => {
		ctx.session.settingCategory = true

		const tasks = await taskService.getTasks(ctx.from.id)

		if (tasks.length === 0) {
			await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.')
			ctx.session.settingCategory = false
			return
		}

		const taskList = tasks
			.map(
				(t, i) =>
					`${i + 1}. ${t.description} [${t.category || '–æ–±—â–µ–µ'}]`
			)
			.join('\n')
		await ctx.reply(
			`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n${taskList}\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`,
			cancelKeyboard
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
	categories.forEach(category => {
		bot.hears(`üè∑Ô∏è ${category}`, async ctx => {
			try {
				const tasks = await taskService.getTasksByCategory(
					ctx.from.id,
					category
				)
				const taskList = tasks.length
					? tasks
							.map((t, i) => `${i + 1}. ${t.description}`)
							.join('\n')
					: `–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}" –Ω–µ—Ç –∑–∞–¥–∞—á.`
				await ctx.reply(
					`üìã –ó–∞–¥–∞—á–∏ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}":\n${taskList}`
				)
			} catch (error) {
				console.error(
					`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}:`,
					error
				)
				await ctx.reply(
					`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}".`
				)
			}
		})
	})

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è, —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ä–æ–∫–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏
	bot.on(message('text'), async (ctx, next) => {
		// –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
		if (ctx.message.text === '–æ—Ç–º–µ–Ω–∞') {
			// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏ —Å–µ—Å—Å–∏–∏
			if (ctx.session) {
				ctx.session.addingTask = false
				ctx.session.newTask = {}
				ctx.session.deletingTask = false
				ctx.session.settingDueDate = false
				ctx.session.dueDate = {}
				ctx.session.settingCategory = false
				ctx.session.categoryData = null
			}

			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
			await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', mainMenuKeyboard)
			return
		}

		// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
		if (ctx.session && ctx.session.addingTask === true) {
			// –ï—Å–ª–∏ –µ—â–µ –Ω–µ –≤–≤–µ–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
			if (!ctx.session.newTask.description) {
				ctx.session.newTask.description = ctx.message.text

				// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
				await ctx.reply(
					'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∑–∞–¥–∞—á–∏:',
					taskCategoryKeyboard
				)
			}
			// –ï—Å–ª–∏ —É–∂–µ –≤–≤–µ–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
			else {
				let category = '–æ–±—â–µ–µ'

				if (ctx.message.text !== '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å') {
					// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
					if (categories.includes(ctx.message.text)) {
						category = ctx.message.text
					} else {
						await ctx.reply(
							'–í—ã–±—Ä–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–æ–±—â–µ–µ".'
						)
					}
				}

				try {
					await taskService.addTask(
						ctx.from.id,
						ctx.session.newTask.description,
						category
					)
					await ctx.reply(
						`–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "${category}".`
					)

					// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
					await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', mainMenuKeyboard)

					// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏ –¥–∞–Ω–Ω—ã–µ
					ctx.session.addingTask = false
					ctx.session.newTask = {}
				} catch (error) {
					console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error)
					await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.')
					ctx.session.addingTask = false
					ctx.session.newTask = {}
				}
			}
		}
		// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
		else if (ctx.session && ctx.session.deletingTask === true) {
			const tasks = await taskService.getTasks(ctx.from.id)
			const taskIndex = parseInt(ctx.message.text) - 1

			if (
				isNaN(taskIndex) ||
				taskIndex < 0 ||
				taskIndex >= tasks.length
			) {
				await ctx.reply(
					'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
				)
				return
			}

			const taskId = tasks[taskIndex]._id || tasks[taskIndex].id

			try {
				await taskService.deleteTask(taskId)
				await ctx.reply('–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.')
				await ctx.reply('', mainMenuKeyboard)
			} catch (error) {
				await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.')
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏:', error)
			}

			ctx.session.deletingTask = false
			return
		}
		// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ä–æ–∫–∞ –∑–∞–¥–∞—á–∏
		else if (ctx.session && ctx.session.settingDueDate === true) {
			// –ï—Å–ª–∏ –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∑–∞–¥–∞—á–∞
			if (!ctx.session.dueDate.taskId) {
				const tasks = await taskService.getTasks(ctx.from.id)
				const taskIndex = parseInt(ctx.message.text) - 1

				if (
					isNaN(taskIndex) ||
					taskIndex < 0 ||
					taskIndex >= tasks.length
				) {
					await ctx.reply(
						'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.'
					)
					return
				}

				ctx.session.dueDate.taskId =
					tasks[taskIndex]._id || tasks[taskIndex].id
				await ctx.reply(
					'–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2024-04-01):\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
					cancelKeyboard
				)
			}
			// –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤—ã–±—Ä–∞–Ω–∞ –∏ —Ç–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –¥–∞—Ç—É
			else {
				const dateStr = ctx.message.text
				const dateRegex = /^\d{4}-\d{2}-\d{2}$/

				if (!dateRegex.test(dateStr)) {
					await ctx.reply(
						'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2024-04-01).\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
					)
					return
				}

				try {
					await taskService.setTaskDueDate(
						ctx.session.dueDate.taskId,
						dateStr
					)
					await ctx.reply('–°—Ä–æ–∫ –∑–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.')
				} catch (error) {
					await ctx.reply(
						'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ä–æ–∫–∞ –∑–∞–¥–∞—á–∏.'
					)
					console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ä–æ–∫–∞ –∑–∞–¥–∞—á–∏:', error)
				}

				ctx.session.settingDueDate = false
				ctx.session.dueDate = {}
				return
			}
		}
		// –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏
		else if (ctx.session && ctx.session.settingCategory === true) {
			// –ï—Å–ª–∏ –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∑–∞–¥–∞—á–∞
			if (!ctx.session.categoryData) {
				const tasks = await taskService.getTasks(ctx.from.id)
				const taskIndex = parseInt(ctx.message.text) - 1

				if (
					isNaN(taskIndex) ||
					taskIndex < 0 ||
					taskIndex >= tasks.length
				) {
					await ctx.reply(
						'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞.'
					)
					return
				}

				ctx.session.categoryData = {
					taskId: tasks[taskIndex]._id || tasks[taskIndex].id,
				}

				// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
				await ctx.reply(
					'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∑–∞–¥–∞—á–∏:',
					changeCategoryKeyboard
				)
			}
			// –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤—ã–±—Ä–∞–Ω–∞ –∏ —Ç–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
			else {
				const category = ctx.message.text

				if (!categories.includes(category)) {
					await ctx.reply(
						`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞: ${categories.join(
							', '
						)}\n\n–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`
					)
					return
				}

				try {
					await taskService.setTaskCategory(
						ctx.session.categoryData.taskId,
						category
					)
					await ctx.reply(
						`–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "${category}".`
					)
				} catch (error) {
					await ctx.reply(
						'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏.'
					)
					console.error(
						'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏:',
						error
					)
				}

				// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
				await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', mainMenuKeyboard)

				ctx.session.settingCategory = false
				ctx.session.categoryData = null
				return
			}
		} else {
			// –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
			return next()
		}
	})
}
