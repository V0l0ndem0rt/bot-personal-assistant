import schedule from 'node-schedule'
import { bot } from '../bot/index.js'
import { taskService } from './taskService.js'

export function scheduleReminders() {
	// –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–∞—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
	schedule.scheduleJob('0 9 * * *', async () => {
		const tasks = await taskService.getTodayTasks()

		for (const task of tasks) {
			try {
				await bot.telegram.sendMessage(
					task.id,
					`‚è∞ –ó–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: ${task.description}`
				)
			} catch (error) {
				console.error(
					`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏ ${task.id}:`,
					error
				)
			}
		}
	})

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞—á —Å –∏—Å—Ç–µ–∫–∞—é—â–∏–º —Å—Ä–æ–∫–æ–º (–∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞)
	schedule.scheduleJob('0 */3 * * *', async () => {
		// –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏, —Å—Ä–æ–∫ –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞
		const upcomingTasks = await taskService.getUpcomingTasks(24)

		for (const task of upcomingTasks) {
			try {
				const dueDate = new Date(task.dueDate)
				const timeLeft = Math.round(
					(dueDate - new Date()) / (1000 * 60 * 60)
				)

				await bot.telegram.sendMessage(
					task.id,
					`‚ö†Ô∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∑–∞–¥–∞—á–∞ "${task.description}" –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ ${timeLeft} —á–∞—Å–æ–≤!`
				)
			} catch (error) {
				console.error(
					`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∑–∞–¥–∞—á–∏ ${task.id}:`,
					error
				)
			}
		}
	})
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
export function initScheduler() {
	try {
		scheduleReminders()
		console.log('üïí –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω')
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error)
	}
}
