import { Markup } from 'telegraf'
import { gigachat } from '../services/aiService.js'
import { taskService } from '../services/taskService.js'

export function handleCommands(bot) {
	// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
	bot.command('start', async ctx => {
		await taskService.createUser(ctx.from.id)
		await ctx.reply(
			'–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
			Markup.keyboard([
				['üìã –ó–∞–¥–∞—á–∏', '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'],
				['üí∞ –ë–∞–ª–∞–Ω—Å', 'üì¶ –ú–æ–¥–µ–ª–∏', 'üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥'],
			]).resize()
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—á–∏"
	bot.hears('üìã –ó–∞–¥–∞—á–∏', async ctx => {
		const tasks = await taskService.getTasks(ctx.from.id)
		const taskList = tasks.length
			? tasks.map((t, i) => `${i + 1}. ${t.description}`).join('\n')
			: '–ó–∞–¥–∞—á –Ω–µ—Ç.'
		await ctx.reply(`üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n${taskList}`)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ë–∞–ª–∞–Ω—Å"
	bot.hears('üí∞ –ë–∞–ª–∞–Ω—Å', async ctx => {
		const balance = await gigachat.getBalance()
		await ctx.reply(
			`–ë–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–æ–≤: \n${balance.balance
				.map(b => `${b.usage}: ${b.value}`)
				.join('\n')}`
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–¥–µ–ª–∏"
	bot.hears('üì¶ –ú–æ–¥–µ–ª–∏', async ctx => {
		const models = await gigachat.allModels()
		await ctx.reply(
			`–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: \n${models.map(m => m.id).join('\n')}`
		)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥"
	bot.hears('üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥', async ctx => {
		await taskService.resetDialog(ctx.from.id)
		await ctx.reply('–î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω.')
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"
	bot.hears('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', async ctx => {
		ctx.session = { addingTask: true }
		await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:')
		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
		bot.on('text', async ctx => {
			if (ctx.session && ctx.session.addingTask) {
				const task = ctx.message.text
				await taskService.addTask(ctx.from.id, task)
				await ctx.reply('–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.')
				ctx.session.addingTask = false
			} else {
				await ctx.reply('–Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É')
			}
		})
	})
}
